{"mappings":"ACAA,SAAS,gBAAgB,CAAC,mBAAoB,KAE5C,IAAM,EAAmB,SAAS,cAAc,CAAC,qBAC3C,EAAiB,SAAS,cAAc,CAAC,aACzC,EAAe,SAAS,cAAc,CAAC,eAIzC,EAAa,EAAE,CACf,EAAkB,EAAE,CAElB,EAAiB,AAAC,IACtB,IAAM,EAAW,EAAO,IAAI,CAAC,GAAG,CAAC,AAAA,GAAO,CAAC,wBAAwB,EAAE,EAAI,OAAO,CAAC,EAAE,IAAI,CAAC,IACtF,MAAO;A;A;A;AAIwB,mCAAA,EAAE,EAAO,IAAI,CAAC;AACjD,mCAAmC,EAAE,EAAO,IAAI,CAAC;A;AAEN,2CAAA,EAAE,EAAO,GAAG,CAAC,OAAO,EAAE,EAAO,IAAI,CAAC;A;AAE3C,kCAAA,EAAE,EAAO,IAAI,CAAC;AACb,mCAAA,EAAE,EAAO,MAAM,CAAC;AACnD;AACA;AACA;AACA,0CAA0C,EAAE,EAAS;A;A;AAGjD,IAAA,CAAC,AACH,EAEM,EAAc,KAClB,IAAM,EAAgB,EAAiB,QAAQ,CAAC,MAAM,CAGhD,EAAW,AAFO,EAAgB,KAAK,CAAC,EAAe,EA7BxC,GA+BY,GAAG,CAAC,GAAgB,IAAI,CAAC,GAC1D,CAAA,EAAiB,SAAS,EAAI,EAE1B,EAAiB,QAAQ,CAAC,MAAM,EAAI,EAAgB,MAAM,CAC5D,EAAe,KAAK,CAAC,OAAO,CAAG,OAE/B,EAAe,KAAK,CAAC,OAAO,CAAG,OAEnC,EAyCM,EAAY,UAChB,GAAI,CACF,IAAM,EAAW,MAAM,MAvFX,yDAwFZ,GAAI,CAAC,EAAS,EAAE,CAAE,MAAM,AAAI,MAAM,+BAElC,EAAkB,IADlB,EAAa,MAAM,EAAS,IAAI,GACC,CA7BnC,AAFc,CAAC,SAAU,IAAI,IAAI,EAAW,GAAG,CAAC,AAAA,GAAU,EAAO,IAAI,GAAG,CAElE,OAAO,CAAC,AAAA,IACZ,IAAM,EAAS,SAAS,aAAa,CAAC,IACtC,CAAA,EAAO,IAAI,CAAG,IACd,EAAO,WAAW,CAAG,EACrB,EAAO,SAAS,CAAC,GAAG,CAAC,qBACjB,AAAS,QAAT,GACF,EAAO,SAAS,CAAC,GAAG,CAAC,6BAEvB,EAAa,WAAW,CAAC,EAC3B,GAEA,EAAa,gBAAgB,CAAC,QAAS,AAAC,IACtC,EAAE,cAAc,GAChB,IAAM,EAAS,EAAE,MAAM,CAEnB,EAAO,SAAS,CAAC,QAAQ,CAAC,uBAC5B,EAAa,aAAa,CAAC,8BAA8B,SAAS,CAAC,MAAM,CAAC,6BAC1E,EAAO,SAAS,CAAC,GAAG,CAAC,6BAErB,AAlCgB,CAAA,AAAC,IACrB,EAAiB,SAAS,CAAG,GAI3B,EADE,AAAS,QAAT,EACgB,IAAI,EAAW,CAEf,EAAW,MAAM,CAAC,AAAA,GAAU,EAAO,IAAI,GAAK,GAEhE,GACF,CAAA,EAwBoB,EAAO,WAAW,EAEpC,GAWE,GAEF,CAAE,MAAO,EAAO,CACd,QAAQ,KAAK,CAAC,GACd,EAAiB,SAAS,CAAG,CAAC,sDAAY,EAAE,EAAM,OAAO,CAAC,IAAI,CAAC,AACjE,CACF,EAEA,EAAe,gBAAgB,CAAC,QAAS,GAEzC,GACF","sources":["<anon>","scripts/fetch.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', ()=>{\n    const API_URL = 'https://test.smarto.agency/smarto_complexes_list.json';\n    const objectsContainer = document.getElementById('objects-container');\n    const loadMoreButton = document.getElementById('load-more');\n    const navContainer = document.getElementById('objects-nav');\n    const ITEMS_PER_PAGE = 3;\n    let currentPage = 0;\n    let allObjects = [];\n    let filteredObjects = [];\n    const createCardHTML = (object)=>{\n        const tagsHTML = object.tags.map((tag)=>`<span class=\"card__tag\">${tag}</span>`).join('');\n        return `\n      <div class=\"card\">\n        <div class=\"card__pin\"></div>\n        <div class=\"card__header\">\n          <span class=\"card__year\">${object.year} \\u{440}.</span>\n          <span class=\"card__type\">${object.type}</span>\n        </div>\n        <div class=\"card__image\"><img src=\"${object.img}\" alt=\"${object.name}\"></div>\n        <div class=\"card__body\">\n          <h3 class=\"card__title\">${object.name}</h3>\n          <p class=\"card__address\">${object.adress}</p>\n        </div>\n        <div class=\"card__footer\">\n          <p class=\"card__footer-title\">\\u{412}\\u{418}\\u{414}\\u{418} \\u{420}\\u{41E}\\u{411}\\u{406}\\u{422}:</p>\n          <div class=\"card__tags-wrapper\">${tagsHTML}</div>\n        </div>\n      </div>\n    `;\n    };\n    const renderCards = ()=>{\n        const renderedCount = objectsContainer.children.length;\n        const objectsToRender = filteredObjects.slice(renderedCount, renderedCount + ITEMS_PER_PAGE);\n        const pageHTML = objectsToRender.map(createCardHTML).join('');\n        objectsContainer.innerHTML += pageHTML;\n        if (objectsContainer.children.length >= filteredObjects.length) loadMoreButton.style.display = 'none';\n        else loadMoreButton.style.display = 'block';\n    };\n    const filterObjects = (type)=>{\n        objectsContainer.innerHTML = '';\n        currentPage = 0;\n        if (type === \"\\u0423\\u0441\\u0456\") filteredObjects = [\n            ...allObjects\n        ];\n        else filteredObjects = allObjects.filter((object)=>object.type === type);\n        renderCards();\n    };\n    const createNavButtons = ()=>{\n        const types = [\n            \"\\u0423\\u0441\\u0456\",\n            ...new Set(allObjects.map((object)=>object.type))\n        ];\n        types.forEach((type)=>{\n            const button = document.createElement('a');\n            button.href = '#';\n            button.textContent = type;\n            button.classList.add('objects__nav-link');\n            if (type === \"\\u0423\\u0441\\u0456\") button.classList.add('objects__nav-link--active');\n            navContainer.appendChild(button);\n        });\n        navContainer.addEventListener('click', (e)=>{\n            e.preventDefault();\n            const target = e.target;\n            if (target.classList.contains('objects__nav-link')) {\n                navContainer.querySelector('.objects__nav-link--active').classList.remove('objects__nav-link--active');\n                target.classList.add('objects__nav-link--active');\n                filterObjects(target.textContent);\n            }\n        });\n    };\n    const fetchData = async ()=>{\n        try {\n            const response = await fetch(API_URL);\n            if (!response.ok) throw new Error(\"\\u041D\\u0435 \\u0432\\u0434\\u0430\\u043B\\u043E\\u0441\\u044F \\u0437\\u0430\\u0432\\u0430\\u043D\\u0442\\u0430\\u0436\\u0438\\u0442\\u0438 \\u0434\\u0430\\u043D\\u0456\");\n            allObjects = await response.json();\n            filteredObjects = [\n                ...allObjects\n            ];\n            createNavButtons();\n            renderCards();\n        } catch (error) {\n            console.error(error);\n            objectsContainer.innerHTML = `<p>\\u{41F}\\u{43E}\\u{43C}\\u{438}\\u{43B}\\u{43A}\\u{430}: ${error.message}</p>`;\n        }\n    };\n    loadMoreButton.addEventListener('click', renderCards);\n    fetchData();\n});\n\n//# sourceMappingURL=smart_orange.f7addba3.js.map\n","document.addEventListener('DOMContentLoaded', () => {\n  const API_URL = 'https://test.smarto.agency/smarto_complexes_list.json';\n  const objectsContainer = document.getElementById('objects-container');\n  const loadMoreButton = document.getElementById('load-more');\n  const navContainer = document.getElementById('objects-nav');\n  \n  const ITEMS_PER_PAGE = 3;\n  let currentPage = 0;\n  let allObjects = [];\n  let filteredObjects = [];\n\n  const createCardHTML = (object) => {\n    const tagsHTML = object.tags.map(tag => `<span class=\"card__tag\">${tag}</span>`).join('');\n    return `\n      <div class=\"card\">\n        <div class=\"card__pin\"></div>\n        <div class=\"card__header\">\n          <span class=\"card__year\">${object.year} р.</span>\n          <span class=\"card__type\">${object.type}</span>\n        </div>\n        <div class=\"card__image\"><img src=\"${object.img}\" alt=\"${object.name}\"></div>\n        <div class=\"card__body\">\n          <h3 class=\"card__title\">${object.name}</h3>\n          <p class=\"card__address\">${object.adress}</p>\n        </div>\n        <div class=\"card__footer\">\n          <p class=\"card__footer-title\">ВИДИ РОБІТ:</p>\n          <div class=\"card__tags-wrapper\">${tagsHTML}</div>\n        </div>\n      </div>\n    `;\n  };\n\n  const renderCards = () => {\n    const renderedCount = objectsContainer.children.length;\n    const objectsToRender = filteredObjects.slice(renderedCount, renderedCount + ITEMS_PER_PAGE);\n\n    const pageHTML = objectsToRender.map(createCardHTML).join('');\n    objectsContainer.innerHTML += pageHTML;\n\n    if (objectsContainer.children.length >= filteredObjects.length) {\n      loadMoreButton.style.display = 'none';\n    } else {\n      loadMoreButton.style.display = 'block';\n    }\n  };\n\n  const filterObjects = (type) => {\n    objectsContainer.innerHTML = '';\n    currentPage = 0;\n\n    if (type === 'Усі') {\n      filteredObjects = [...allObjects];\n    } else {\n      filteredObjects = allObjects.filter(object => object.type === type);\n    }\n    renderCards();\n  };\n\n  const createNavButtons = () => {\n    const types = ['Усі', ...new Set(allObjects.map(object => object.type))];\n    \n    types.forEach(type => {\n      const button = document.createElement('a');\n      button.href = '#';\n      button.textContent = type;\n      button.classList.add('objects__nav-link');\n      if (type === 'Усі') {\n        button.classList.add('objects__nav-link--active');\n      }\n      navContainer.appendChild(button);\n    });\n\n    navContainer.addEventListener('click', (e) => {\n      e.preventDefault();\n      const target = e.target;\n\n      if (target.classList.contains('objects__nav-link')) {\n        navContainer.querySelector('.objects__nav-link--active').classList.remove('objects__nav-link--active');\n        target.classList.add('objects__nav-link--active');\n        \n        filterObjects(target.textContent);\n      }\n    });\n  };\n\n  const fetchData = async () => {\n    try {\n      const response = await fetch(API_URL);\n      if (!response.ok) throw new Error('Не вдалося завантажити дані');\n      allObjects = await response.json();\n      filteredObjects = [...allObjects];\n      \n      createNavButtons();\n      renderCards();\n\n    } catch (error) {\n      console.error(error);\n      objectsContainer.innerHTML = `<p>Помилка: ${error.message}</p>`;\n    }\n  };\n\n  loadMoreButton.addEventListener('click', renderCards);\n\n  fetchData();\n});"],"names":["document","addEventListener","objectsContainer","getElementById","loadMoreButton","navContainer","allObjects","filteredObjects","createCardHTML","object","tagsHTML","tags","map","tag","join","year","type","img","name","adress","renderCards","renderedCount","children","length","pageHTML","objectsToRender","slice","innerHTML","style","display","fetchData","response","fetch","ok","Error","json","types","Set","forEach","button","createElement","href","textContent","classList","add","appendChild","e","preventDefault","target","contains","querySelector","remove","filterObjects","filter","error","console","message"],"version":3,"file":"smart_orange.f7addba3.js.map"}